class Dictionary:
    def __init__(self,size):
        self.bucket = [[] for i in range(size)]
        
    def insert(self, n, data = None):
        if type(n) == str:
            key = 0
            for s in n:
                key = (key*511 + ord(s))%len(self.bucket)
        else:
            key = n%len(self.bucket)
        
        if data != None:
            if [n, data] not in self.bucket[key]:
                self.bucket[key].append([n, data])
                return 1
            else:
                return -1
            
        if n not in self.bucket[key]:
            self.bucket[key].append(n)
            return 1
        else:
            return -1
        
    def search(self, n):
        if type(n) == str:
            key = 0
            for s in n:
                key = (key*511 + ord(s))%len(self.bucket)
        else:
            key = n%len(self.bucket)
            
        for i in self.bucket[key]:
            if type(i) == int:
                if i == n:
                    return True
            else:
                if i[0] == n:
                    return True
        return False
    
    def read(self, n):
        if type(n) == str:
            key = 0
            for s in n:
                key = (key*511 + ord(s))%len(self.bucket)
        else:
            key = n%len(self.bucket)
            
        for i in self.bucket[key]:
            if i[0] == n:
                return i[1]
        return None
